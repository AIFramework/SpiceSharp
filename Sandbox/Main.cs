using System;
using System.Numerics;
using System.Collections.Generic;
using System.Windows.Forms;
using SpiceSharp;
using SpiceSharp.Components;
using SpiceSharp.Simulations;
using SpiceSharp.Parameters;
using SpiceSharp.Parser.Readers;
using SpiceSharp.Diagnostics;
using MathNet.Numerics.Interpolation;
using SpiceSharp.Circuits;

namespace Sandbox
{
    public partial class Main : Form
    {
        public List<double> input = new List<double>();
        public List<double> output = new List<double>();

        /// <summary>
        /// Constructor
        /// </summary>
        public Main()
        {
            InitializeComponent();

            var plotOutput = chMain.Series.Add("Output");
            plotOutput.ChartType = System.Windows.Forms.DataVisualization.Charting.SeriesChartType.FastPoint;
            var plotReference = chMain.Series.Add("Reference");
            plotReference.ChartType = System.Windows.Forms.DataVisualization.Charting.SeriesChartType.FastPoint;
            // plotReference.YAxisType = System.Windows.Forms.DataVisualization.Charting.AxisType.Secondary;

            // Provided by Spice 3f5
            double[] reft = new double[]
            {
                0.000000000000000e+00, 1.000000000000000e-11, 2.000000000000000e-11, 4.000000000000000e-11, 8.000000000000001e-11, 1.600000000000000e-10, 3.200000000000000e-10, 6.400000000000001e-10, 1.280000000000000e-09, 2.560000000000000e-09, 5.120000000000001e-09, 1.024000000000000e-08, 2.048000000000000e-08, 4.096000000000000e-08, 8.192000000000001e-08, 1.638400000000000e-07, 3.276800000000000e-07, 5.276800000000000e-07, 7.276800000000000e-07, 9.276800000000000e-07, 1.000000000000000e-06, 1.000100000000000e-06, 1.000300000000000e-06, 1.000505416909167e-06, 1.000916250727500e-06, 1.001000000000000e-06, 1.001040727433433e-06, 1.001122182300300e-06, 1.001285092034034e-06, 1.001610911501501e-06, 1.002262550436436e-06, 1.003565828306307e-06, 1.006172384046046e-06, 1.011385495525526e-06, 1.021811718484486e-06, 1.042664164402405e-06, 1.084369056238244e-06, 1.167778839909921e-06, 1.334598407253275e-06, 1.534598407253275e-06, 1.734598407253275e-06, 1.934598407253275e-06, 2.134598407253274e-06, 2.334598407253274e-06, 2.534598407253274e-06, 2.734598407253274e-06, 2.934598407253274e-06, 3.001000000000000e-06, 3.021000000000000e-06, 3.061000000000000e-06, 3.141000000000000e-06, 3.234987431524397e-06, 3.325439370636820e-06, 3.420856173579678e-06, 3.501000000000000e-06, 3.511070126950724e-06, 3.531210380852173e-06, 3.571490888655072e-06, 3.652051904260869e-06, 3.813173935472463e-06, 4.013173935472463e-06, 4.213173935472463e-06, 4.413173935472463e-06, 4.613173935472462e-06, 4.813173935472462e-06, 5.013173935472462e-06, 5.213173935472462e-06, 5.413173935472462e-06, 5.613173935472461e-06, 5.813173935472461e-06, 6.013173935472461e-06, 6.213173935472461e-06, 6.413173935472460e-06, 6.613173935472460e-06, 6.813173935472460e-06, 7.000000000000000e-06, 7.000100000000000e-06, 7.000300000000000e-06, 7.000505416909549e-06, 7.000916250728647e-06, 7.001000000000000e-06, 7.001040727433111e-06, 7.001122182299335e-06, 7.001285092031782e-06, 7.001610911496677e-06, 7.002262550426466e-06, 7.003565828286043e-06, 7.006172384005199e-06, 7.011385495443511e-06, 7.021811718320133e-06, 7.042664164073380e-06, 7.084369055579872e-06, 7.167778838592857e-06, 7.334598404618826e-06, 7.534598404618826e-06, 7.734598404618826e-06, 7.934598404618826e-06, 8.134598404618826e-06, 8.334598404618826e-06, 8.534598404618825e-06, 8.734598404618825e-06, 8.934598404618825e-06, 9.000999999999999e-06, 9.020999999999999e-06, 9.060999999999998e-06, 9.140999999999998e-06, 9.234987431524396e-06, 9.325439370636819e-06, 9.420856173579678e-06, 9.500999999999999e-06, 9.511070126950724e-06, 9.531210380852173e-06, 9.571490888655071e-06, 9.652051904260870e-06, 9.813173935472464e-06, 9.999999999999999e-06
            };
            double[] refv = new double[]
            {
                4.999999995000000e+00, 4.999999995000000e+00, 4.999999995000000e+00, 4.999999995000000e+00, 4.999999995000000e+00, 4.999999995000000e+00, 4.999999995000000e+00, 4.999999995000000e+00, 4.999999995000000e+00, 4.999999995000000e+00, 4.999999995000000e+00, 4.999999995000000e+00, 4.999999995000000e+00, 4.999999995000000e+00, 4.999999995000000e+00, 4.999999995000000e+00, 4.999999995000000e+00, 4.999999995000000e+00, 4.999999995000000e+00, 4.999999995000000e+00, 4.999999995000000e+00, 5.003960391035683e+00, 5.004038814719480e+00, 5.003961923904320e+00, 5.822926169346066e-04, 4.810560374122478e-04, 4.816080793679862e-04, 4.816080824751261e-04, 4.816080793679973e-04, 4.816080824751207e-04, 4.816080793680000e-04, 4.816080824751193e-04, 4.816080793680006e-04, 4.816080824751191e-04, 4.816080793680011e-04, 4.816080824751189e-04, 4.816080793680010e-04, 4.816080824751191e-04, 4.816080793680009e-04, 4.816080824751189e-04, 4.816080793680010e-04, 4.816080824751189e-04, 4.816080793680010e-04, 4.816080824751189e-04, 4.816080793680010e-04, 4.816080824751189e-04, 4.816080793680010e-04, 4.816080824751188e-04, 5.243402581575843e-04, 6.374704766839068e-04, 1.121520168458353e-03, -1.720170200560100e+01, 4.999968188570249e+00, 5.000015800431791e+00, 4.999968190756332e+00, 4.999999991842038e+00, 4.999999998157336e+00, 4.999999991842977e+00, 4.999999998156865e+00, 4.999999991843213e+00, 4.999999998156724e+00, 4.999999991843340e+00, 4.999999998156598e+00, 4.999999991843466e+00, 4.999999998156472e+00, 4.999999991843592e+00, 4.999999998156345e+00, 4.999999991843718e+00, 4.999999998156220e+00, 4.999999991843845e+00, 4.999999998156093e+00, 4.999999991843971e+00, 4.999999998155968e+00, 4.999999991844097e+00, 4.999999998155841e+00, 4.999999991844228e+00, 5.003960391004448e+00, 5.004038814750084e+00, 5.003961923874295e+00, 5.822926152947390e-04, 4.810560374114067e-04, 4.816080793679895e-04, 4.816080824751229e-04, 4.816080793680006e-04, 4.816080824751175e-04, 4.816080793680033e-04, 4.816080824751161e-04, 4.816080793680040e-04, 4.816080824751158e-04, 4.816080793680041e-04, 4.816080824751156e-04, 4.816080793680043e-04, 4.816080824751156e-04, 4.816080793680043e-04, 4.816080824751157e-04, 4.816080793680042e-04, 4.816080824751155e-04, 4.816080793680042e-04, 4.816080824751155e-04, 4.816080793680042e-04, 4.816080824751155e-04, 4.816080793680042e-04, 4.816080824751157e-04, 5.243402581575805e-04, 6.374704766839011e-04, 1.121520168458326e-03, -1.720170200561121e+01, 4.999968188570249e+00, 5.000015800431791e+00, 4.999968190756332e+00, 4.999999991842038e+00, 4.999999998157336e+00, 4.999999991842977e+00, 4.999999998156865e+00, 4.999999991843213e+00, 4.999999998156719e+00
            };

            // Parse the netlist
            NetlistReader nr = new NetlistReader();
            string netlist = string.Join(Environment.NewLine,
                "V1 in 0 PULSE(1 5 1u 1n 0.5u 2u 6u)",
                "Vsupply vdd 0 5",
                "M1 out in 0 0 MM L = 100u W = 100u",
                ".MODEL MM NMOS LEVEL = 1 IS = 1e-32 VTO = 3.03646 LAMBDA = 0 KP = 5.28747 CGSO = 6.5761e-06 CGDO = 1e-11",
                "R1 out vdd 1k",
                ".SAVE V(out)",
                ".tran 1n 10u"
            );
            nr.Parse(new System.IO.MemoryStream(System.Text.Encoding.UTF8.GetBytes(netlist)));

            var net = nr.Netlist;
            net.Circuit.Nodes.Map("in");
            net.Circuit.Nodes.Map("vdd");
            net.Circuit.Nodes.Map("out");
            net.OnExportSimulationData += (object sender, SimulationData data) =>
            {
                plotOutput.Points.AddXY(data.GetTime(), net.Exports[0].Extract(data));
            };
            for (int i = 0; i < reft.Length; i++)
                plotReference.Points.AddXY(reft[i], refv[i]);
            net.Simulate();

            chMain.ChartAreas[0].AxisX.Minimum = 1.0e-6;
            chMain.ChartAreas[0].AxisX.Maximum = 1.002e-6;
            chMain.ChartAreas[0].AxisX.RoundAxisValues();
        }
    }
}