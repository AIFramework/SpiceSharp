*** TRANSIENT SIMULATIONS ***
1) Calculate OP with MODETRANOP | MODEINITJCT -> MODETRANOP | MODEINITFLOAT
	1') UseDC = true, UseSmallSignal = false, Domain = Time, InitJct -> InitFloat, UseIC = ?
2) Set mode MODETRAN | MODEINITTRAN for the first timepoint
	2') ckt.Method = method, UseDC = false, UseIC = false
3) Converge
4) Set mode MODETRAN | MODEINITPRED for the next timepoint
	4') Currently not changing to InitPred because I have not found any situation where state1 is not just copied to state0.

*** AC SIMULATIONS ***
1) Calculate OP with MODEDCOP | MODEINITJCT -> MODEDCOP | MODEINITFLOAT
	1') UseDC = true, UseSmallSignal = false, Domain = Frequency
2) Load again using mode MODEDCOP | MODEINITSMSIG
	2') UseSmallSignal = true
3) Calculate AC solution using mode MODEAC

*** DC SIMULATIONS ***
1) Set mode MODEDCTRANCURVE | MODEINITJCT
	1') UseDC = true, UseSmallSignal = false, Domain = None


*** EXTRA ***
- MODEDC = MODEDCOP | MODETRANOP | MODEDCTRANCURVE
- INITF = MODEINITFLOAT | MODEINITJCT | MODEINITFIX | MODEINITSMSIG | MODEINITTRAN | MODEINITPRED

*** NOTES ***

MODEUIC = UseIC, but SpiceSharp will prioritize this variable in the following way:
	- MODETRANOP + MODEUIC = MODEUIC
	- MODETRAN + MODEUIC = MODEUIC
MODETRAN = method != null
MODETRANOP = Domain == Time && UseDC
MODEINITTRAN = method != null && method.SavedTime == 0.0

MODETRAN | MODETRANOP = Domain == Time


ModeDC = UseDC
MODEDCOP = UseDC
MODEINITSMSIG = UseSmallSignal (inside load statements)
MODEAC = Never reached inside the simulation (?) so you can leave this out


MODEDCTRANCURVE = Domain == None


MODEINITJCT = Init == InitJct
MODEINITFLOAT = Init == InitFloat
MODEINITPRED = used in transient simulations, if it is just copying state1 in state0 you can ignore it